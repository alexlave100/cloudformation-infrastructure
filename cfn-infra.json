{
  "AWSTemplateFormatVersion": "2010-09-09",
      
      "Description": "Creates a highly available and elastic architecture to deploy a simple web application for adding and removing notes. We call it WebApp in development",
  
      "Parameters": {
        "CidrBlockRange": {
          "Type": "String",
          "Default": "10.0.0.0/16",
          "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
          "ConstraintDescription" : "Must be a valid CIDR range of the form x.x.x.x/x. Defaults to 10.0.0.0/16",
          "Description": "CIDR block range of the VPC being created in the template."
        },
        "S3BucketURL": {
          "Type": "String",
          "Description": "URL of the S3 bucket containing the nested stack templates."
        }
      },
  
      "Resources": {
        "LARouteTableAssociation1": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": { "Ref": "LARouteTable" },
            "SubnetId": { "Ref": "PubSubnet1" }
          }
        },
        "LARouteTableAssociation2": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": { "Ref": "LARouteTable" },
            "SubnetId": { "Ref": "PubSubnet2" }
          }
        },
        "LARouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": { "Ref": "WebAppVPC" },
            "Tags" : [
              { "Key": "Name", "Value": "la-routetable" }
            ]
          }
        },
        "LAInternetGateway": {
          "Type": "AWS::EC2::InternetGateway",
          "Properties": {
            "Tags": [
              { "Key": "Name", "Value": "la-internetgateway" }
            ]
          }
        },
        "LARoute": {
          "Type": "AWS::EC2::Route",
          "Properties": {
            "DestinationCidrBlock": "0.0.0.0/0",
            "RouteTableId": { "Ref": "LARouteTable" },
            "GatewayId": { "Ref": "LAInternetGateway" }
          }
        },
        "LAVPCGatewayAttachement": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
            "InternetGatewayId": { "Ref": "LAInternetGateway" },
            "VpcId": { "Ref": "WebAppVPC" }
          }
        },
        "NATSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "Security Group for the NAT instance",
            "GroupName": "NAT-sg",
            "VpcId": { "Ref": "WebAppVPC" },
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "CidrIp": "0.0.0.0/0",
                "FromPort": "22",
                "ToPort": "22",
                "Description": "Allows inbound SSH from port 22."
              },
              {
                "IpProtocol": "-1",
                "CidrIp": { "Ref": "CidrBlockRange" },
                "FromPort": "-1",
                "ToPort": "-1",
                "Description": "Allow all traffic inside the VPC to the NAT instance."
              }
            ]
          }
        },
        "WebAppVPC": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "CidrBlock": { "Ref": "CidrBlockRange" },
            "EnableDnsHostnames": false,
            "EnableDnsSupport": true,
            "InstanceTenancy": "default",
            "Tags": [
              { "Key": "Name", "Value": "la-vpc" }, 
              { "Key": "Id", "Value": "001"},
              { "Key": "Region", "Value": { "Ref": "AWS::Region" } },
              { "Key": "AccountId", "Value": { "Ref": "AWS::AccountId" } } ]
          }
        },
        "PubSubnet1": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": {
              "Fn::Select": [
                "0",
                {
                  "Fn::GetAZs": ""
                }
              ]
            },
            "CidrBlock": "10.0.0.0/24",
            "MapPublicIpOnLaunch": "true",
            "Tags": [
              { "Key": "Name", "Value": "la-pubsubnet1" },
              { "Key": "Id", "Value": "001" },
              { "Key": "VPCName", "Value": "WebAppVPC" } ],
            "VpcId": { "Ref": "WebAppVPC" }
          }
        },
        "PubSubnet2": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": {
              "Fn::Select": [
                "1",
                {
                  "Fn::GetAZs": ""
                }
              ]
            },
            "CidrBlock": "10.0.1.0/24",
            "MapPublicIpOnLaunch": "true",
            "Tags": [
              { "Key": "Name", "Value": "la-pubsubnet2" },
              { "Key": "Id", "Value": "002" },
              { "Key": "VPCName", "Value": "WebAppVPC" } ],
            "VpcId": { "Ref": "WebAppVPC" }
          }
        },
        "PrivSubnet1": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": {
              "Fn::Select": [
                "0",
                {
                  "Fn::GetAZs": ""
                }
              ]
            },
            "CidrBlock": "10.0.2.0/24",
            "MapPublicIpOnLaunch": "false",
            "Tags": [
              { "Key": "Name", "Value": "la-privsubnet1" },
              { "Key": "Id", "Value": "001" },
              { "Key": "VPCName", "Value": "WebAppVPC" } ],
            "VpcId": { "Ref": "WebAppVPC" }
          }
        },
        "PrivSubnet2": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "AvailabilityZone": {
              "Fn::Select": [
                "1",
                {
                  "Fn::GetAZs": ""
                }
              ]
            },
            "CidrBlock": "10.0.3.0/24",
            "MapPublicIpOnLaunch": "true",
            "Tags": [
              { "Key": "Name", "Value": "la-privsubnet2" },
              { "Key": "Id", "Value": "002" },
              { "Key": "VPCName", "Value": "WebAppVPC" } ],
            "VpcId": { "Ref": "WebAppVPC" }
          }
        },

        "ComputeStack": {
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
            "TemplateURL": { "Ref": "S3BucketURL" },
            "TimeoutInMinutes" : "5",
            "Parameters": {
              "NATAvailabilityZone": { 
                "Fn::Select": [ 
                  "0", 
                  { 
                    "Fn::GetAZs": "" 
                  } 
                ] 
              },
              "NATPublicSubnet1Id": { "Ref": "PubSubnet1" },
              "NATSecurityGroup": { "Ref": "NATSecurityGroup" }
            },
            "Tags": [
              { "Key": "Name", "Value": "cfn-computestack" }
            ]
          }
        }
      },
  
      "Outputs": {
        "VpcPhysicalId" : {
          "Description": "Physical ID of the created VPC.",
          "Value": { "Ref": "WebAppVPC" }
        }
      }
  }